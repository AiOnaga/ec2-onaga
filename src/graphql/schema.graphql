"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")"Indicates what fields are available at the top level of a query operation."type Query {    viewer: Viewer @field(resolver: "App\\GraphQL\\Queries\\Viewer")    profile(id: Int! @eq): Profile @field(resolver: "App\\GraphQL\\Resolvers\\ProfileResolver@resolveProfile")    post(id: Int! @eq): Post @find    postsByUser: [Post] @field(resolver: "App\\GraphQL\\Queries\\PostsByUser")    postsByCategory(postId: Int!): [Post] @paginate(defaultCount: 10)    postByBookmark(userId:Int!): [Post] @paginate(defaultCount: 10)    comment(id: Int! @eq): Comment! @find    comments : [Comment] @all    commentByPost(postId: Int!): [Comment] @paginate(defaultCount: 10)    category(id: Int! @eq): Category! @find    allCategories: [Category] @all    followings(userId: Int!): [Profile] @find    followers(userId: Int!): [Profile] @find    likeCount(userId: Int!): Int! @find    likeViewerList(userId: Int!):Int @find    "おすすめ記事をランダムでとっていくる"    postByRecommend: [Post] @paginate(type: SIMPLE,defaultCount: 10)}type Mutation {    createPost(input: createPostInput! @spread): Post @create    editPost(input: editPostInput! @spread): Post @update    deletePost(id: Int! @whereKey): Post @delete}type Viewer {    id: Int    "名前"    name: String!    "メールアドレス"    email: String!    "プロフィール"    profile: Profile!}"プロフィール"type Profile {    "ニックネーム"    nickName: String! @rename(attribute: "nick_name")    "アイコンURL"    iconUrl: String @rename(attribute: "icon_path")    "紹介文"    discription: String @rename(attribute: "discription")}"記事"type Post{    id: Int    "タイトル"    title: String!    "本文"    text: String! @rename(attribute: "content")    "投稿画像"    postImage: PostImage    "作成日"    created_at: DateTime!    "更新日"    updated_at: DateTime!    "コメント"    comments: [Comment] @hasMany(relation: "comments")    "投稿主情報"    author: Profile!    "カテゴリー：一つの記事に複数のカテゴリーが紐づく"    categories: [Category!]! @belongsToMany(relation: "categories")    "お気に入り数"    bookmarkCount: Int    "いいね数"    likeCount: Int}type PostImage{    id: Int!    url: String!    altText: String}"コメント"type Comment{    id: Int    "ユーザーID"    userId: Int! @rename(attribute: "user_id")    "記事ID"    postId: Int! @rename(attribute: "post_id")    "投稿主情報"    author: Profile!    "コメント"    text: String! @rename(attribute: "content")    "作成日"    created_at: DateTime!    "更新日"    updated_at: DateTime!}type Category{    id: Int!    "カテゴリ名"    categoryName: String! @rename(attribute: "name")    "作成日"    created_at: DateTime!    "更新日"    updated_at: DateTime!}input createViewerInput{    "名前"    name: String!    "メールアドレス"    email: String!    "プロフィール"    profile: createProfileInput!}input createProfileInput{    "ユーザーID"    userId: Int!    "ニックネーム"    nickName: String!    "アイコンURL"    iconUrl:String    "紹介文"    discription: String}input createPostInput{    userId: Int! @rename(attribute: "user_id")    title: String!    text: String! @rename(attribute: "content")}input editPostInput{    id: Int!    title: String    text: String @rename(attribute: "content")}